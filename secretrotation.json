{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Transform": "AWS::SecretsManager-2020-07-23"
   "Description": "A template is for creating lambda from RDS Serets Rotation",
   "Parameters": {
    "Invoke": {
        "Type": "String",
        "Description": "Name of the lambda behind Api Gateway",
        "Default": "sample"
    }
},

"Mappings": {

},
   "Resources":{

    "LambdaPolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
            "Description": "Policy for creating a test Secrate",
            "Path": "/",
            "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": "logs:CreateLogGroup",
                        "Resource": "arn:aws:logs:ap-east-1:298376647212:*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": [
                            "arn:aws:logs:ap-east-1:298376647212:log-group:/aws/lambda/*:*"
                        ]
                    }
                ]
            }
        }
    },

    "SecretPolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
            "Description": "Policy for creating a test Secrate",
            "Path": "/",
            "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                       "Effect": "Allow",
                       "Action": [
                           "secretsmanager:GetRandomPassword",
                           "secretsmanager:GetSecretValue",
                           "secretsmanager:DescribeSecret",
                           "secretsmanager:PutSecretValue",
                           "secretsmanager:UpdateSecretVersionStage"
                       ],
                       "Resource": "*"
                   }
               ]
           }
       }
   },

   "LambdaRole": {
    "Type": "AWS::IAM::Role",
    "Properties": {
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                   "Effect": "Allow",
                   "Principal": {
                      "Service": [
                          "lambda.amazonaws.com",
                          "secretsmanager.amazonaws.com"

                      ]
                  },
                      "Action": [
                                 "sts:AssumeRole"
                       ]
              }
          ]
      },
          "Path": "/",
          "ManagedPolicyArns": [
              {
                  "Ref": "LambdaPolicy"
              },
              {
                   "Ref": "SecretPolicy"
              }
            ]
        }
      },

      "LambdaFunResource": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
            "FunctionName": "lambda-function-21",
            
              "Code": {
                      "S3Bucket" : "secretrotation-sql",
                       "S3Key" : "mysqlfun.zip"
         },
            "Description": "Used to run job",
            "Handler": "function.lambda_handler",
            "Role": {
                "Fn::GetAtt": [ "LambdaRole", "Arn" ]
                 },
            "Runtime": "python3.9",
            "Timeout": 360
            }
        },

        "manager": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {"Ref": "LambdaFunResource"},
                "Principal": "secretsmanager.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                   }
                 }
            },

      "TestVPC":{
         "Type":"AWS::EC2::VPC",
         "Properties":{
            "CidrBlock":"10.0.0.0/16",
            "EnableDnsHostnames":true,
            "EnableDnsSupport":true
         }
      },
      "TestSubnet01":{
         "Type":"AWS::EC2::Subnet",
         "Properties":{
            "CidrBlock":"10.0.96.0/19",
            "AvailabilityZone":{
               "Fn::Select":[
                  "0",
                  {
                     "Fn::GetAZs":{
                        "Ref":"AWS::Region"
                     }
                  }
               ]
            },
            "VpcId":{
               "Ref":"TestVPC"
            }
         }
      },
      "TestSubnet02":{
         "Type":"AWS::EC2::Subnet",
         "Properties":{
            "CidrBlock":"10.0.128.0/19",
            "AvailabilityZone":{
               "Fn::Select":[
                  "1",
                  {
                     "Fn::GetAZs":{
                        "Ref":"AWS::Region"
                     }
                  }
               ]
            },
            "VpcId":{
               "Ref":"TestVPC"
            }
         }
      },
      "SecretsManagerVPCEndpoint":{
         "Type":"AWS::EC2::VPCEndpoint",
         "Properties":{
            "SubnetIds":[
               {
                  "Ref":"TestSubnet01"
               },
               {
                  "Ref":"TestSubnet02"
               }
            ],
            "SecurityGroupIds":[
               {
                  "Fn::GetAtt":[
                     "TestVPC",
                     "DefaultSecurityGroup"
                  ]
               }
            ],
            "VpcEndpointType":"Interface",
            "ServiceName":{
               "Fn::Sub":"com.amazonaws.${AWS::Region}.secretsmanager"
            },
            "PrivateDnsEnabled":true,
            "VpcId":{
               "Ref":"TestVPC"
            }
         }
      },
      "MyRDSInstanceRotationSecret":{
         "Type":"AWS::SecretsManager::Secret",
         "Properties":{
            "GenerateSecretString":{
               "SecretStringTemplate":"{\"username\": \"admin\"}",
               "GenerateStringKey":"password",
               "PasswordLength":16,
               "ExcludeCharacters":"\"@/\\"
            },
            "Tags":[
               {
                  "Key":"AppName",
                  "Value":"MyApp"
               }
            ]
         }
      },
      "MyDBInstance":{
         "Type":"AWS::RDS::DBInstance",
         "Properties":{
            "AllocatedStorage":20,
            "DBInstanceClass":"db.t3.micro",
            "Engine":"mysql",
            "DBSubnetGroupName":{
               "Ref":"MyDBSubnetGroup"
            },
            "MasterUsername":{
               "Fn::Sub":"{{resolve:secretsmanager:${MyRDSInstanceRotationSecret}::username}}"
            },
        "MasterUserPassword":{
               "Fn::Sub":"{{resolve:secretsmanager:${MyRDSInstanceRotationSecret}::password}}"
            },
            "BackupRetentionPeriod":0,
            "VPCSecurityGroups":[
               {
                  "Fn::GetAtt":[
                     "TestVPC",
                     "DefaultSecurityGroup"
                  ]
               }
            ]
         }
      },
      "MyDBSubnetGroup":{
         "Type":"AWS::RDS::DBSubnetGroup",
         "Properties":{
            "DBSubnetGroupDescription":"Test Group",
            "SubnetIds":[
               {
                  "Ref":"TestSubnet01"
               },
               {
                  "Ref":"TestSubnet02"
               }
            ]
         }
      },
      "SecretRDSInstanceAttachment":{
         "Type":"AWS::SecretsManager::SecretTargetAttachment",
         "Properties":{
            "SecretId":{
               "Ref":"MyRDSInstanceRotationSecret"
            },
            "TargetId":{
               "Ref":"MyDBInstance"
            },
            "TargetType":"AWS::RDS::DBInstance"
         }
      },
      "MySecretRotationSchedule":{
         "Type":"AWS::SecretsManager::RotationSchedule",
         "DependsOn":"SecretRDSInstanceAttachment",
         "Properties":{
            "SecretId":{
               "Ref":"MyRDSInstanceRotationSecret"
            },
            "HostedRotationLambda":{
               "RotationType":"MySQLSingleUser",
               "RotationLambdaName": {"Ref": "LambdaFunResource"},
               "VpcSecurityGroupIds":{
                  "Fn::GetAtt":[
                     "TestVPC",
                     "DefaultSecurityGroup"
                  ]
               },
               "VpcSubnetIds":{
                  "Fn::Join":[
                     ",",
                     [
                        {
                           "Ref":"TestSubnet01"
                        },
                        {
                           "Ref":"TestSubnet02"
                        }
                     ]
                  ]
               }
            },
            "RotationRules":{
              "Duration": "2h",
              "ScheduleExpression": "cron(0 4 ? * SUN#1 *)"
            }
         }
      }
   }
}